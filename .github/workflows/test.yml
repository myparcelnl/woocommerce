name: 'ðŸ§ª Run tests'

on:
  workflow_call:
    inputs:
      ref:
        description: 'Ref to run on'
        type: string
        required: false
        default: ${{ github.ref }}

jobs:
  test-frontend:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: 'Cache test results'
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            coverage
            junit
          key: test-frontend-${{ hashFiles('**/package.json', '**/yarn.lock', 'views/**/*') }}

      - uses: myparcelnl/actions/pdk-setup-frontend@v4
        if: steps.cache.outputs.cache-hit != 'true'

      - name: 'Run frontend tests'
        if: steps.cache.outputs.cache-hit != 'true'
        uses: myparcelnl/actions/nx-run-many@v4
        with:
          target: 'test:coverage'
          parallel: 1

      - uses: myparcelnl/actions/collect-test-results@v4
        if: always() && steps.cache.outputs.cache-hit != 'true'

      - uses: myparcelnl/actions/codecov-coverage@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: frontend
          flags: frontend
          files: coverage/**/*.xml

      - uses: myparcelnl/actions/codecov-test-results@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: frontend
          flags: frontend
          files: junit/**/*.xml

  test-backend:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: 'Cache coverage'
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            clover.xml
            junit.xml
          key: test-backend-${{ hashFiles('**/composer.json', '**/composer.lock', 'src/**/*', 'tests/**/*') }}

      - uses: myparcelnl/actions/pdk-setup@v4
        if: steps.cache.outputs.cache-hit != 'true'
        id: setup
        with:
          php-version: ${{ vars.PHP_VERSION }}

      - uses: myparcelnl/actions/pdk-builder@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          command: 'translations'

      - uses: myparcelnl/actions/composer-pest@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          image: ${{ steps.setup.outputs.image }}
          pest-args: |
            --log-junit=junit.xml

      - name: 'Fix coverage file'
        if: always() && steps.cache.outputs.cache-hit != 'true'
        shell: bash
        #language=bash
        run: |
          # Strip the /app/ prefix (absolute path from the docker container) from the coverage paths before uploading.
          sed -i 's/\/app\///g' clover.xml

      - uses: myparcelnl/actions/codecov-coverage@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: backend
          flags: backend
          files: clover.xml

      - uses: myparcelnl/actions/codecov-test-results@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: backend
          flags: backend
          files: junit.xml
