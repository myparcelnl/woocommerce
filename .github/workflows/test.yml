name: 'ðŸ§ª Run tests'

on:
  workflow_call:
    inputs:
      ref:
        description: 'Ref to run on'
        type: string
        required: false
        default: ${{ github.ref }}

jobs:
  test-frontend:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: 'Cache test results'
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            coverage
            junit
          key: test-frontend-${{ hashFiles('**/package.json', '**/yarn.lock', 'views/**/*') }}

      - uses: myparcelnl/actions/pdk-setup-upgrade@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}
          mode: 'frontend'

      - name: 'Run frontend tests'
        if: steps.cache.outputs.cache-hit != 'true'
        uses: myparcelnl/actions/nx-run-many@v4
        with:
          target: 'test:coverage'
          parallel: 1

      - name: 'Move test result files'
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        #language=bash
        run: |
          # Create the directories in case they don't exist
          mkdir -p coverage junit

          yarn workspaces foreach -Apv --exclude . exec \
            bash -c \
              'if [ -f "coverage/clover.xml" ]; then \
                 # Make file paths relative
                 sed -i "" "s|'$PWD'/||g" "coverage/clover.xml"; \
                 cp -f "coverage/clover.xml" "'$PWD'/coverage/$(basename $PWD).xml"; \
               fi; \
               if [[ -f "junit.xml" && -s "junit.xml" ]]; then \
                 # Set the testsuites name to the package name
                 sed -i "" "s|<testsuites name=\".*\">|<testsuites name=\"$npm_package_name\">|" "junit.xml"; \
                 cp -f "junit.xml" "'$PWD'/junit/$(basename $PWD).xml"; \
               fi'

      - uses: myparcelnl/actions/codecov-coverage@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: frontend
          flags: unit,frontend
          files: coverage/**/*.xml

      - uses: myparcelnl/actions/codecov-test-results@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: frontend
          flags: unit,frontend
          files: junit/**/*.xml

  test-backend:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: 'Cache coverage'
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            clover.xml
            junit.xml
          key: test-backend-${{ hashFiles('**/composer.json', '**/composer.lock', 'src/**/*', 'tests/**/*') }}

      - uses: myparcelnl/actions/pdk-setup-upgrade@v4
        if: steps.cache.outputs.cache-hit != 'true'
        id: setup
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}
          php-version: ${{ vars.PHP_VERSION }}
          mode: 'backend'

      - uses: myparcelnl/actions/pdk-builder@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          command: 'translations'

      - uses: myparcelnl/actions/composer-pest@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          image: ${{ steps.setup.outputs.image }}
          args: '--log-junit=junit.xml'

      - name: 'Fix coverage file'
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        #language=bash
        run: |
          # Strip the /app/ prefix (absolute path from the docker container) from the coverage paths before uploading.
          sed -i 's/\/app\///g' clover.xml

      - uses: myparcelnl/actions/codecov-coverage@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: backend
          flags: unit,backend
          files: clover.xml

      - uses: myparcelnl/actions/codecov-test-results@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: backend
          flags: unit,backend
          files: junit.xml
