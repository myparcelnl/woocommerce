name: 'Create build'
description: ''

inputs:
  app-id:
    description: 'GitHub App ID'
    required: true

  private-key:
    description: 'GitHub App Private Key'
    required: true

  php-scoper-version:
    description: 'PHP Scoper Version'
    required: true

outputs:
  token:
    description: 'GitHub Token'
    value: ${{ steps.credentials.outputs.token }}

  image:
    description: 'Docker image to use'
    value: ${{ steps.setup.outputs.image }}

runs:
  using: composite
  steps:
    - uses: myparcelnl/actions/setup-git-credentials@v3
      id: credentials
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.private-key }}

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ steps.credentials.outputs.token }}

    - uses: ./.github/actions/setup
      id: setup
      with:
        composer-flags: --no-dev

    - name: 'Cache php-scoper'
      uses: actions/cache@v3
      id: php-scoper-cache
      with:
        path: .cache/php-scoper
        key: php-scoper-${{ inputs.php-scoper-version }}

    - name: 'Install php-scoper'
      if: steps.php-scoper-cache.outputs.cache-hit != 'true'
      shell: bash
      # language=sh
      run: |
        mkdir -p .cache/php-scoper

        docker run \
          --volume $PWD/.cache/php-scoper:/app \
          ${{ steps.setup.outputs.image }} \
          composer require \
          --no-interaction \
          --no-plugins \
          --no-progress \
          --no-scripts \
          "humbug/php-scoper:${{ inputs.php-scoper-version }}"

    # The actual compilation is done in pdk.config.js
    - name: 'Cache compiled php'
      uses: actions/cache@v3
      id: compiled-php-cache
      with:
        path: .cache/build
        key: compiled-php-${{ hashFiles('**/composer.json', '**/composer.lock', 'src/**/*', 'config/**/*', '*.php') }}

    - name: 'Build frontend'
      shell: bash
      #language=sh
      run: |
        yarn nx run-many \
          --output-style=static \
          --runner=cloud \
          --target=build
